// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.5.1
//   protoc               v5.29.1
// source: proto/chat.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from '@nestjs/microservices';

export const protobufPackage = "chat";

export enum AttachmentType {
  IMAGE = 0,
  VIDEO = 1,
  AUDIO = 2,
  FILE = 3,
  ETC = 4,
  UNRECOGNIZED = -1,
}

export enum MessageType {
  TEXT = 0,
  UPLOAD = 1,
  UNRECOGNIZED = -1,
}

export interface Attachment {
  url: string;
  type: AttachmentType;
}

export interface Chat {
  id: number;
  message: string;
  senderId: string;
  roomId: string;
  attachments?: Attachment | undefined;
  type: MessageType;
  createdAt: string;
  deleteAt: string;
}

export const CHAT_PACKAGE_NAME = "chat";

export interface ChatServiceClient {
}

export interface ChatServiceController {
}

export function ChatServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = [];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcMethod("ChatService", method)(constructor.prototype[method], method, descriptor);
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod("ChatService", method)(constructor.prototype[method], method, descriptor);
    }
  };
}

export const CHAT_SERVICE_NAME = "ChatService";
